class Solution:
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        if root is None:
            return []

        result = []
        current = [root]

        while current:
            next_current = []
            rightmost_val = None

            for node in current:
                rightmost_val = node.val  # 最後會被最右邊的取代

                if node.left:
                    next_current.append(node.left)
                if node.right:
                    next_current.append(node.right)

            if rightmost_val is not None:
                result.append(rightmost_val)#一個level加一次

            current = next_current

        return result
