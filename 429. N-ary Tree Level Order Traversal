from typing import List

class Node:
    def __init__(self, val=None, children=None):
        self.val = val
        self.children = children if children is not None else []

class Solution:
    def levelOrder(self, root: 'Node') -> List[List[int]]:
        if root is None:
            return []

        current_list = []
        current = [root]

        while current:
            val = []
            next_current = []

            for node in current:
                val.append(node.val)

                # 遍历节点的子节点
                for child in node.children:
                    next_current.append(child)

            current_list.append(val)
            current = next_current

        return current_list
