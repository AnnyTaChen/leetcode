# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        if root is None:
            return -1

        current = [root]

        # Use a set to store unique values
        unique_vals = set()

        while current:
            next_current = []
            for node in current:
                unique_vals.add(node.val)

                if node.left:
                    next_current.append(node.left)

                if node.right:
                    next_current.append(node.right)

            current = next_current


        # Sort the unique values and return the second minimum
        sorted_vals = sorted(unique_vals)
        return sorted_vals[k-1]
