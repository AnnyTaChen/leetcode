# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def findMode(self, root: Optional[TreeNode]) -> List[int]:
        def helper(node):
            nonlocal current_val, current_count, max_count, modes

            if node is None:
                return

            helper(node.left)

            if current_val == node.val:
                current_count += 1
            else:
                current_val = node.val
                current_count = 1

            if current_count > max_count:
                max_count = current_count
                modes = [current_val]#重置
            elif current_count == max_count:
                modes.append(current_val)

            helper(node.right)

        modes = []
        current_val = None
        current_count = 0
        max_count = 0
        helper(root)
        return modes

